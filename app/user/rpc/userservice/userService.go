// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package userservice

import (
	"context"

	"github.com/showurl/Path-IM-Server-OICQ/app/user/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetTokenReq           = pb.GetTokenReq
	GetTokenResp          = pb.GetTokenResp
	GetUserByIdsReq       = pb.GetUserByIdsReq
	GetUserByIdsResp      = pb.GetUserByIdsResp
	GetUserByUsernameReq  = pb.GetUserByUsernameReq
	GetUserByUsernameResp = pb.GetUserByUsernameResp
	GetUserConfigReq      = pb.GetUserConfigReq
	GetUserConfigResp     = pb.GetUserConfigResp
	RegisterReq           = pb.RegisterReq
	RegisterResp          = pb.RegisterResp
	UpdateUserConfigReq   = pb.UpdateUserConfigReq
	UpdateUserConfigResp  = pb.UpdateUserConfigResp
	UpdateUserReq         = pb.UpdateUserReq
	UpdateUserResp        = pb.UpdateUserResp

	UserService interface {
		Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error)
		GetToken(ctx context.Context, in *GetTokenReq, opts ...grpc.CallOption) (*GetTokenResp, error)
		GetUserByUsername(ctx context.Context, in *GetUserByUsernameReq, opts ...grpc.CallOption) (*GetUserByUsernameResp, error)
		GetUserByIds(ctx context.Context, in *GetUserByIdsReq, opts ...grpc.CallOption) (*GetUserByIdsResp, error)
		UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserResp, error)
		GetUserConfig(ctx context.Context, in *GetUserConfigReq, opts ...grpc.CallOption) (*GetUserConfigResp, error)
		UpdateUserConfig(ctx context.Context, in *UpdateUserConfigReq, opts ...grpc.CallOption) (*UpdateUserConfigResp, error)
	}

	defaultUserService struct {
		cli zrpc.Client
	}
)

func NewUserService(cli zrpc.Client) UserService {
	return &defaultUserService{
		cli: cli,
	}
}

func (m *defaultUserService) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUserService) GetToken(ctx context.Context, in *GetTokenReq, opts ...grpc.CallOption) (*GetTokenResp, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.GetToken(ctx, in, opts...)
}

func (m *defaultUserService) GetUserByUsername(ctx context.Context, in *GetUserByUsernameReq, opts ...grpc.CallOption) (*GetUserByUsernameResp, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.GetUserByUsername(ctx, in, opts...)
}

func (m *defaultUserService) GetUserByIds(ctx context.Context, in *GetUserByIdsReq, opts ...grpc.CallOption) (*GetUserByIdsResp, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.GetUserByIds(ctx, in, opts...)
}

func (m *defaultUserService) UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserResp, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.UpdateUser(ctx, in, opts...)
}

func (m *defaultUserService) GetUserConfig(ctx context.Context, in *GetUserConfigReq, opts ...grpc.CallOption) (*GetUserConfigResp, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.GetUserConfig(ctx, in, opts...)
}

func (m *defaultUserService) UpdateUserConfig(ctx context.Context, in *UpdateUserConfigReq, opts ...grpc.CallOption) (*UpdateUserConfigResp, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.UpdateUserConfig(ctx, in, opts...)
}
