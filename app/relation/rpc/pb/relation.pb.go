// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: relation.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendUserId  string   `protobuf:"bytes,1,opt,name=SendUserId,proto3" json:"SendUserId,omitempty"`
	RecvUserIds []string `protobuf:"bytes,2,rep,name=RecvUserIds,proto3" json:"RecvUserIds,omitempty"`
}

func (x *AddFriendReq) Reset() {
	*x = AddFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendReq) ProtoMessage() {}

func (x *AddFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendReq.ProtoReflect.Descriptor instead.
func (*AddFriendReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{0}
}

func (x *AddFriendReq) GetSendUserId() string {
	if x != nil {
		return x.SendUserId
	}
	return ""
}

func (x *AddFriendReq) GetRecvUserIds() []string {
	if x != nil {
		return x.RecvUserIds
	}
	return nil
}

type AddFriendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailedReason string `protobuf:"bytes,1,opt,name=FailedReason,proto3" json:"FailedReason,omitempty"`
}

func (x *AddFriendResp) Reset() {
	*x = AddFriendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendResp) ProtoMessage() {}

func (x *AddFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendResp.ProtoReflect.Descriptor instead.
func (*AddFriendResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{1}
}

func (x *AddFriendResp) GetFailedReason() string {
	if x != nil {
		return x.FailedReason
	}
	return ""
}

type DelFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendUserId  string   `protobuf:"bytes,1,opt,name=SendUserId,proto3" json:"SendUserId,omitempty"`
	RecvUserIds []string `protobuf:"bytes,2,rep,name=RecvUserIds,proto3" json:"RecvUserIds,omitempty"`
}

func (x *DelFriendReq) Reset() {
	*x = DelFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelFriendReq) ProtoMessage() {}

func (x *DelFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelFriendReq.ProtoReflect.Descriptor instead.
func (*DelFriendReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{2}
}

func (x *DelFriendReq) GetSendUserId() string {
	if x != nil {
		return x.SendUserId
	}
	return ""
}

func (x *DelFriendReq) GetRecvUserIds() []string {
	if x != nil {
		return x.RecvUserIds
	}
	return nil
}

type DelFriendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailedReason string `protobuf:"bytes,1,opt,name=FailedReason,proto3" json:"FailedReason,omitempty"`
}

func (x *DelFriendResp) Reset() {
	*x = DelFriendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelFriendResp) ProtoMessage() {}

func (x *DelFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelFriendResp.ProtoReflect.Descriptor instead.
func (*DelFriendResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{3}
}

func (x *DelFriendResp) GetFailedReason() string {
	if x != nil {
		return x.FailedReason
	}
	return ""
}

type IsFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendUserId  string   `protobuf:"bytes,1,opt,name=SendUserId,proto3" json:"SendUserId,omitempty"`
	RecvUserIds []string `protobuf:"bytes,2,rep,name=RecvUserIds,proto3" json:"RecvUserIds,omitempty"`
}

func (x *IsFriendReq) Reset() {
	*x = IsFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFriendReq) ProtoMessage() {}

func (x *IsFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFriendReq.ProtoReflect.Descriptor instead.
func (*IsFriendReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{4}
}

func (x *IsFriendReq) GetSendUserId() string {
	if x != nil {
		return x.SendUserId
	}
	return ""
}

func (x *IsFriendReq) GetRecvUserIds() []string {
	if x != nil {
		return x.RecvUserIds
	}
	return nil
}

type IsFriendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*IsFriendResp_Item `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *IsFriendResp) Reset() {
	*x = IsFriendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFriendResp) ProtoMessage() {}

func (x *IsFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFriendResp.ProtoReflect.Descriptor instead.
func (*IsFriendResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{5}
}

func (x *IsFriendResp) GetList() []*IsFriendResp_Item {
	if x != nil {
		return x.List
	}
	return nil
}

type GetFriendModelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendUserId  string   `protobuf:"bytes,1,opt,name=SendUserId,proto3" json:"SendUserId,omitempty"`
	RecvUserIds []string `protobuf:"bytes,2,rep,name=RecvUserIds,proto3" json:"RecvUserIds,omitempty"`
}

func (x *GetFriendModelReq) Reset() {
	*x = GetFriendModelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendModelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendModelReq) ProtoMessage() {}

func (x *GetFriendModelReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendModelReq.ProtoReflect.Descriptor instead.
func (*GetFriendModelReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{6}
}

func (x *GetFriendModelReq) GetSendUserId() string {
	if x != nil {
		return x.SendUserId
	}
	return ""
}

func (x *GetFriendModelReq) GetRecvUserIds() []string {
	if x != nil {
		return x.RecvUserIds
	}
	return nil
}

type GetFriendModelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Models [][]byte `protobuf:"bytes,1,rep,name=models,proto3" json:"models,omitempty"`
}

func (x *GetFriendModelResp) Reset() {
	*x = GetFriendModelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendModelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendModelResp) ProtoMessage() {}

func (x *GetFriendModelResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendModelResp.ProtoReflect.Descriptor instead.
func (*GetFriendModelResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{7}
}

func (x *GetFriendModelResp) GetModels() [][]byte {
	if x != nil {
		return x.Models
	}
	return nil
}

type UpdateFriendModelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendUserId string            `protobuf:"bytes,1,opt,name=SendUserId,proto3" json:"SendUserId,omitempty"`
	RecvUserId string            `protobuf:"bytes,2,opt,name=RecvUserId,proto3" json:"RecvUserId,omitempty"`
	UpdateMap  map[string]string `protobuf:"bytes,3,rep,name=updateMap,proto3" json:"updateMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateFriendModelReq) Reset() {
	*x = UpdateFriendModelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFriendModelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriendModelReq) ProtoMessage() {}

func (x *UpdateFriendModelReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriendModelReq.ProtoReflect.Descriptor instead.
func (*UpdateFriendModelReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateFriendModelReq) GetSendUserId() string {
	if x != nil {
		return x.SendUserId
	}
	return ""
}

func (x *UpdateFriendModelReq) GetRecvUserId() string {
	if x != nil {
		return x.RecvUserId
	}
	return ""
}

func (x *UpdateFriendModelReq) GetUpdateMap() map[string]string {
	if x != nil {
		return x.UpdateMap
	}
	return nil
}

type UpdateFriendModelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailedReason string `protobuf:"bytes,1,opt,name=FailedReason,proto3" json:"FailedReason,omitempty"`
}

func (x *UpdateFriendModelResp) Reset() {
	*x = UpdateFriendModelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFriendModelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriendModelResp) ProtoMessage() {}

func (x *UpdateFriendModelResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriendModelResp.ProtoReflect.Descriptor instead.
func (*UpdateFriendModelResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateFriendModelResp) GetFailedReason() string {
	if x != nil {
		return x.FailedReason
	}
	return ""
}

type GetFriendIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendUserId string `protobuf:"bytes,1,opt,name=SendUserId,proto3" json:"SendUserId,omitempty"`
}

func (x *GetFriendIdsReq) Reset() {
	*x = GetFriendIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendIdsReq) ProtoMessage() {}

func (x *GetFriendIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendIdsReq.ProtoReflect.Descriptor instead.
func (*GetFriendIdsReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{10}
}

func (x *GetFriendIdsReq) GetSendUserId() string {
	if x != nil {
		return x.SendUserId
	}
	return ""
}

type GetFriendIdsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendIds []string `protobuf:"bytes,1,rep,name=FriendIds,proto3" json:"FriendIds,omitempty"`
}

func (x *GetFriendIdsResp) Reset() {
	*x = GetFriendIdsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendIdsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendIdsResp) ProtoMessage() {}

func (x *GetFriendIdsResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendIdsResp.ProtoReflect.Descriptor instead.
func (*GetFriendIdsResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{11}
}

func (x *GetFriendIdsResp) GetFriendIds() []string {
	if x != nil {
		return x.FriendIds
	}
	return nil
}

type AddBlacklistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendUserId  string   `protobuf:"bytes,1,opt,name=SendUserId,proto3" json:"SendUserId,omitempty"`
	RecvUserIds []string `protobuf:"bytes,2,rep,name=RecvUserIds,proto3" json:"RecvUserIds,omitempty"`
}

func (x *AddBlacklistReq) Reset() {
	*x = AddBlacklistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBlacklistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBlacklistReq) ProtoMessage() {}

func (x *AddBlacklistReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBlacklistReq.ProtoReflect.Descriptor instead.
func (*AddBlacklistReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{12}
}

func (x *AddBlacklistReq) GetSendUserId() string {
	if x != nil {
		return x.SendUserId
	}
	return ""
}

func (x *AddBlacklistReq) GetRecvUserIds() []string {
	if x != nil {
		return x.RecvUserIds
	}
	return nil
}

type AddBlacklistResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailedReason string `protobuf:"bytes,1,opt,name=FailedReason,proto3" json:"FailedReason,omitempty"`
}

func (x *AddBlacklistResp) Reset() {
	*x = AddBlacklistResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBlacklistResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBlacklistResp) ProtoMessage() {}

func (x *AddBlacklistResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBlacklistResp.ProtoReflect.Descriptor instead.
func (*AddBlacklistResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{13}
}

func (x *AddBlacklistResp) GetFailedReason() string {
	if x != nil {
		return x.FailedReason
	}
	return ""
}

type DelBlacklistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendUserId  string   `protobuf:"bytes,1,opt,name=SendUserId,proto3" json:"SendUserId,omitempty"`
	RecvUserIds []string `protobuf:"bytes,2,rep,name=RecvUserIds,proto3" json:"RecvUserIds,omitempty"`
}

func (x *DelBlacklistReq) Reset() {
	*x = DelBlacklistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelBlacklistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelBlacklistReq) ProtoMessage() {}

func (x *DelBlacklistReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelBlacklistReq.ProtoReflect.Descriptor instead.
func (*DelBlacklistReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{14}
}

func (x *DelBlacklistReq) GetSendUserId() string {
	if x != nil {
		return x.SendUserId
	}
	return ""
}

func (x *DelBlacklistReq) GetRecvUserIds() []string {
	if x != nil {
		return x.RecvUserIds
	}
	return nil
}

type DelBlacklistResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailedReason string `protobuf:"bytes,1,opt,name=FailedReason,proto3" json:"FailedReason,omitempty"`
}

func (x *DelBlacklistResp) Reset() {
	*x = DelBlacklistResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelBlacklistResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelBlacklistResp) ProtoMessage() {}

func (x *DelBlacklistResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelBlacklistResp.ProtoReflect.Descriptor instead.
func (*DelBlacklistResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{15}
}

func (x *DelBlacklistResp) GetFailedReason() string {
	if x != nil {
		return x.FailedReason
	}
	return ""
}

type IsBlacklistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendUserId  string   `protobuf:"bytes,1,opt,name=SendUserId,proto3" json:"SendUserId,omitempty"`
	RecvUserIds []string `protobuf:"bytes,2,rep,name=RecvUserIds,proto3" json:"RecvUserIds,omitempty"`
}

func (x *IsBlacklistReq) Reset() {
	*x = IsBlacklistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsBlacklistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBlacklistReq) ProtoMessage() {}

func (x *IsBlacklistReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBlacklistReq.ProtoReflect.Descriptor instead.
func (*IsBlacklistReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{16}
}

func (x *IsBlacklistReq) GetSendUserId() string {
	if x != nil {
		return x.SendUserId
	}
	return ""
}

func (x *IsBlacklistReq) GetRecvUserIds() []string {
	if x != nil {
		return x.RecvUserIds
	}
	return nil
}

type IsBlacklistResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*IsBlacklistResp_Item `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *IsBlacklistResp) Reset() {
	*x = IsBlacklistResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsBlacklistResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBlacklistResp) ProtoMessage() {}

func (x *IsBlacklistResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBlacklistResp.ProtoReflect.Descriptor instead.
func (*IsBlacklistResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{17}
}

func (x *IsBlacklistResp) GetList() []*IsBlacklistResp_Item {
	if x != nil {
		return x.List
	}
	return nil
}

type GetBlacklistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendUserId string `protobuf:"bytes,1,opt,name=SendUserId,proto3" json:"SendUserId,omitempty"`
}

func (x *GetBlacklistReq) Reset() {
	*x = GetBlacklistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlacklistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlacklistReq) ProtoMessage() {}

func (x *GetBlacklistReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlacklistReq.ProtoReflect.Descriptor instead.
func (*GetBlacklistReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{18}
}

func (x *GetBlacklistReq) GetSendUserId() string {
	if x != nil {
		return x.SendUserId
	}
	return ""
}

type GetBlacklistResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlacklistIds []string `protobuf:"bytes,1,rep,name=BlacklistIds,proto3" json:"BlacklistIds,omitempty"`
}

func (x *GetBlacklistResp) Reset() {
	*x = GetBlacklistResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlacklistResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlacklistResp) ProtoMessage() {}

func (x *GetBlacklistResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlacklistResp.ProtoReflect.Descriptor instead.
func (*GetBlacklistResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{19}
}

func (x *GetBlacklistResp) GetBlacklistIds() []string {
	if x != nil {
		return x.BlacklistIds
	}
	return nil
}

type GetBlacklistModelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendUserId   string   `protobuf:"bytes,1,opt,name=SendUserId,proto3" json:"SendUserId,omitempty"`
	BlacklistIds []string `protobuf:"bytes,2,rep,name=BlacklistIds,proto3" json:"BlacklistIds,omitempty"`
}

func (x *GetBlacklistModelReq) Reset() {
	*x = GetBlacklistModelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlacklistModelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlacklistModelReq) ProtoMessage() {}

func (x *GetBlacklistModelReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlacklistModelReq.ProtoReflect.Descriptor instead.
func (*GetBlacklistModelReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{20}
}

func (x *GetBlacklistModelReq) GetSendUserId() string {
	if x != nil {
		return x.SendUserId
	}
	return ""
}

func (x *GetBlacklistModelReq) GetBlacklistIds() []string {
	if x != nil {
		return x.BlacklistIds
	}
	return nil
}

type GetBlacklistModelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Models [][]byte `protobuf:"bytes,1,rep,name=models,proto3" json:"models,omitempty"`
}

func (x *GetBlacklistModelResp) Reset() {
	*x = GetBlacklistModelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlacklistModelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlacklistModelResp) ProtoMessage() {}

func (x *GetBlacklistModelResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlacklistModelResp.ProtoReflect.Descriptor instead.
func (*GetBlacklistModelResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{21}
}

func (x *GetBlacklistModelResp) GetModels() [][]byte {
	if x != nil {
		return x.Models
	}
	return nil
}

type IsFriendResp_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	IsFriend bool   `protobuf:"varint,2,opt,name=IsFriend,proto3" json:"IsFriend,omitempty"`
}

func (x *IsFriendResp_Item) Reset() {
	*x = IsFriendResp_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFriendResp_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFriendResp_Item) ProtoMessage() {}

func (x *IsFriendResp_Item) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFriendResp_Item.ProtoReflect.Descriptor instead.
func (*IsFriendResp_Item) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{5, 0}
}

func (x *IsFriendResp_Item) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *IsFriendResp_Item) GetIsFriend() bool {
	if x != nil {
		return x.IsFriend
	}
	return false
}

type IsBlacklistResp_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	IsBlacklist bool   `protobuf:"varint,2,opt,name=IsBlacklist,proto3" json:"IsBlacklist,omitempty"`
}

func (x *IsBlacklistResp_Item) Reset() {
	*x = IsBlacklistResp_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relation_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsBlacklistResp_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBlacklistResp_Item) ProtoMessage() {}

func (x *IsBlacklistResp_Item) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBlacklistResp_Item.ProtoReflect.Descriptor instead.
func (*IsBlacklistResp_Item) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{17, 0}
}

func (x *IsBlacklistResp_Item) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *IsBlacklistResp_Item) GetIsBlacklist() bool {
	if x != nil {
		return x.IsBlacklist
	}
	return false
}

var File_relation_proto protoreflect.FileDescriptor

var file_relation_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x50, 0x0a, 0x0c, 0x41, 0x64,
	0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65,
	0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65,
	0x63, 0x76, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x52, 0x65, 0x63, 0x76, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x33, 0x0a, 0x0d,
	0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a,
	0x0c, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0x50, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x76, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x52, 0x65, 0x63, 0x76, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x22, 0x33, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x0b, 0x49, 0x73, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x76, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x52, 0x65,
	0x63, 0x76, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x7b, 0x0a, 0x0c, 0x49, 0x73, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x49, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x3a, 0x0a, 0x04, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x22, 0x55, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x53,
	0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x52,
	0x65, 0x63, 0x76, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x52, 0x65, 0x63, 0x76, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x2c, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x22, 0xe1, 0x01, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x76, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x63, 0x76, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x70, 0x1a, 0x3c, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x3b, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x31, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x30, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64,
	0x73, 0x22, 0x53, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x76, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x52, 0x65, 0x63, 0x76, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x36, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x53,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x76, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x52, 0x65, 0x63, 0x76, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x22, 0x36, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x0e, 0x49,
	0x73, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x52, 0x65, 0x63, 0x76, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x52, 0x65, 0x63, 0x76, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22,
	0x87, 0x01, 0x0a, 0x0f, 0x49, 0x73, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x73, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x40, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a,
	0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x22, 0x0a, 0x0c, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73,
	0x74, 0x49, 0x64, 0x73, 0x22, 0x5a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a,
	0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x73,
	0x22, 0x2f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x32, 0xa1, 0x06, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x12, 0x16, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64,
	0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x12, 0x16, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x39, 0x0a, 0x08, 0x49, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x15, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x49, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1b,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1e,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x12,
	0x19, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a,
	0x0c, 0x44, 0x65, 0x6c, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x49, 0x73, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49,
	0x73, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x73, 0x42, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x54, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_relation_proto_rawDescOnce sync.Once
	file_relation_proto_rawDescData = file_relation_proto_rawDesc
)

func file_relation_proto_rawDescGZIP() []byte {
	file_relation_proto_rawDescOnce.Do(func() {
		file_relation_proto_rawDescData = protoimpl.X.CompressGZIP(file_relation_proto_rawDescData)
	})
	return file_relation_proto_rawDescData
}

var file_relation_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_relation_proto_goTypes = []interface{}{
	(*AddFriendReq)(nil),          // 0: relation.AddFriendReq
	(*AddFriendResp)(nil),         // 1: relation.AddFriendResp
	(*DelFriendReq)(nil),          // 2: relation.DelFriendReq
	(*DelFriendResp)(nil),         // 3: relation.DelFriendResp
	(*IsFriendReq)(nil),           // 4: relation.IsFriendReq
	(*IsFriendResp)(nil),          // 5: relation.IsFriendResp
	(*GetFriendModelReq)(nil),     // 6: relation.GetFriendModelReq
	(*GetFriendModelResp)(nil),    // 7: relation.GetFriendModelResp
	(*UpdateFriendModelReq)(nil),  // 8: relation.UpdateFriendModelReq
	(*UpdateFriendModelResp)(nil), // 9: relation.UpdateFriendModelResp
	(*GetFriendIdsReq)(nil),       // 10: relation.GetFriendIdsReq
	(*GetFriendIdsResp)(nil),      // 11: relation.GetFriendIdsResp
	(*AddBlacklistReq)(nil),       // 12: relation.AddBlacklistReq
	(*AddBlacklistResp)(nil),      // 13: relation.AddBlacklistResp
	(*DelBlacklistReq)(nil),       // 14: relation.DelBlacklistReq
	(*DelBlacklistResp)(nil),      // 15: relation.DelBlacklistResp
	(*IsBlacklistReq)(nil),        // 16: relation.IsBlacklistReq
	(*IsBlacklistResp)(nil),       // 17: relation.IsBlacklistResp
	(*GetBlacklistReq)(nil),       // 18: relation.GetBlacklistReq
	(*GetBlacklistResp)(nil),      // 19: relation.GetBlacklistResp
	(*GetBlacklistModelReq)(nil),  // 20: relation.GetBlacklistModelReq
	(*GetBlacklistModelResp)(nil), // 21: relation.GetBlacklistModelResp
	(*IsFriendResp_Item)(nil),     // 22: relation.IsFriendResp.Item
	nil,                           // 23: relation.UpdateFriendModelReq.UpdateMapEntry
	(*IsBlacklistResp_Item)(nil),  // 24: relation.IsBlacklistResp.Item
}
var file_relation_proto_depIdxs = []int32{
	22, // 0: relation.IsFriendResp.list:type_name -> relation.IsFriendResp.Item
	23, // 1: relation.UpdateFriendModelReq.updateMap:type_name -> relation.UpdateFriendModelReq.UpdateMapEntry
	24, // 2: relation.IsBlacklistResp.list:type_name -> relation.IsBlacklistResp.Item
	0,  // 3: relation.relationService.AddFriend:input_type -> relation.AddFriendReq
	2,  // 4: relation.relationService.DelFriend:input_type -> relation.DelFriendReq
	4,  // 5: relation.relationService.IsFriend:input_type -> relation.IsFriendReq
	6,  // 6: relation.relationService.GetFriendModel:input_type -> relation.GetFriendModelReq
	8,  // 7: relation.relationService.UpdateFriendModel:input_type -> relation.UpdateFriendModelReq
	10, // 8: relation.relationService.GetFriendIds:input_type -> relation.GetFriendIdsReq
	12, // 9: relation.relationService.AddBlacklist:input_type -> relation.AddBlacklistReq
	14, // 10: relation.relationService.DelBlacklist:input_type -> relation.DelBlacklistReq
	16, // 11: relation.relationService.IsBlacklist:input_type -> relation.IsBlacklistReq
	18, // 12: relation.relationService.GetBlacklist:input_type -> relation.GetBlacklistReq
	20, // 13: relation.relationService.GetBlacklistModel:input_type -> relation.GetBlacklistModelReq
	1,  // 14: relation.relationService.AddFriend:output_type -> relation.AddFriendResp
	3,  // 15: relation.relationService.DelFriend:output_type -> relation.DelFriendResp
	5,  // 16: relation.relationService.IsFriend:output_type -> relation.IsFriendResp
	7,  // 17: relation.relationService.GetFriendModel:output_type -> relation.GetFriendModelResp
	9,  // 18: relation.relationService.UpdateFriendModel:output_type -> relation.UpdateFriendModelResp
	11, // 19: relation.relationService.GetFriendIds:output_type -> relation.GetFriendIdsResp
	13, // 20: relation.relationService.AddBlacklist:output_type -> relation.AddBlacklistResp
	15, // 21: relation.relationService.DelBlacklist:output_type -> relation.DelBlacklistResp
	17, // 22: relation.relationService.IsBlacklist:output_type -> relation.IsBlacklistResp
	19, // 23: relation.relationService.GetBlacklist:output_type -> relation.GetBlacklistResp
	21, // 24: relation.relationService.GetBlacklistModel:output_type -> relation.GetBlacklistModelResp
	14, // [14:25] is the sub-list for method output_type
	3,  // [3:14] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_relation_proto_init() }
func file_relation_proto_init() {
	if File_relation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_relation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelFriendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFriendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendModelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendModelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFriendModelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFriendModelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendIdsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBlacklistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBlacklistResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelBlacklistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelBlacklistResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsBlacklistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsBlacklistResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlacklistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlacklistResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlacklistModelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlacklistModelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFriendResp_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relation_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsBlacklistResp_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_relation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_relation_proto_goTypes,
		DependencyIndexes: file_relation_proto_depIdxs,
		MessageInfos:      file_relation_proto_msgTypes,
	}.Build()
	File_relation_proto = out.File
	file_relation_proto_rawDesc = nil
	file_relation_proto_goTypes = nil
	file_relation_proto_depIdxs = nil
}
