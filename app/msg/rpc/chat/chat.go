// Code generated by goctl. DO NOT EDIT!
// Source: chat.proto

package chat

import (
	"context"

	"github.com/showurl/Path-IM-Server-OICQ/app/msg/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetMinAndMaxGroupSeqItem = pb.GetMinAndMaxGroupSeqItem
	GetMinAndMaxGroupSeqReq  = pb.GetMinAndMaxGroupSeqReq
	GetMinAndMaxGroupSeqResp = pb.GetMinAndMaxGroupSeqResp
	GetMinAndMaxSeqReq       = pb.GetMinAndMaxSeqReq
	GetMinAndMaxSeqResp      = pb.GetMinAndMaxSeqResp
	MsgData                  = pb.MsgData
	MsgDataToDB              = pb.MsgDataToDB
	MsgDataToMQ              = pb.MsgDataToMQ
	MsgOptions               = pb.MsgOptions
	OfflinePush              = pb.OfflinePush
	PullMsgByGroupSeqListReq = pb.PullMsgByGroupSeqListReq
	PullMsgBySeqListReq      = pb.PullMsgBySeqListReq
	PullMsgListResp          = pb.PullMsgListResp
	PushMsgDataToMQ          = pb.PushMsgDataToMQ
	SendMsgReq               = pb.SendMsgReq
	SendMsgResp              = pb.SendMsgResp

	Chat interface {
		GetMaxAndMinSeq(ctx context.Context, in *GetMinAndMaxSeqReq, opts ...grpc.CallOption) (*GetMinAndMaxSeqResp, error)
		GetMinAndMaxGroupSeq(ctx context.Context, in *GetMinAndMaxGroupSeqReq, opts ...grpc.CallOption) (*GetMinAndMaxGroupSeqResp, error)
		PullMessageBySeqList(ctx context.Context, in *PullMsgBySeqListReq, opts ...grpc.CallOption) (*PullMsgListResp, error)
		PullMessageByGroupSeqList(ctx context.Context, in *PullMsgByGroupSeqListReq, opts ...grpc.CallOption) (*PullMsgListResp, error)
		SendMsg(ctx context.Context, in *SendMsgReq, opts ...grpc.CallOption) (*SendMsgResp, error)
	}

	defaultChat struct {
		cli zrpc.Client
	}
)

func NewChat(cli zrpc.Client) Chat {
	return &defaultChat{
		cli: cli,
	}
}

func (m *defaultChat) GetMaxAndMinSeq(ctx context.Context, in *GetMinAndMaxSeqReq, opts ...grpc.CallOption) (*GetMinAndMaxSeqResp, error) {
	client := pb.NewChatClient(m.cli.Conn())
	return client.GetMaxAndMinSeq(ctx, in, opts...)
}

func (m *defaultChat) GetMinAndMaxGroupSeq(ctx context.Context, in *GetMinAndMaxGroupSeqReq, opts ...grpc.CallOption) (*GetMinAndMaxGroupSeqResp, error) {
	client := pb.NewChatClient(m.cli.Conn())
	return client.GetMinAndMaxGroupSeq(ctx, in, opts...)
}

func (m *defaultChat) PullMessageBySeqList(ctx context.Context, in *PullMsgBySeqListReq, opts ...grpc.CallOption) (*PullMsgListResp, error) {
	client := pb.NewChatClient(m.cli.Conn())
	return client.PullMessageBySeqList(ctx, in, opts...)
}

func (m *defaultChat) PullMessageByGroupSeqList(ctx context.Context, in *PullMsgByGroupSeqListReq, opts ...grpc.CallOption) (*PullMsgListResp, error) {
	client := pb.NewChatClient(m.cli.Conn())
	return client.PullMessageByGroupSeqList(ctx, in, opts...)
}

func (m *defaultChat) SendMsg(ctx context.Context, in *SendMsgReq, opts ...grpc.CallOption) (*SendMsgResp, error) {
	client := pb.NewChatClient(m.cli.Conn())
	return client.SendMsg(ctx, in, opts...)
}
