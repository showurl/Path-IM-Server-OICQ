// Code generated by goctl. DO NOT EDIT!
// Source: chat.proto

package server

import (
	"context"

	"github.com/showurl/Path-IM-Server-OICQ/app/msg/rpc/internal/logic"
	"github.com/showurl/Path-IM-Server-OICQ/app/msg/rpc/internal/svc"
	"github.com/showurl/Path-IM-Server-OICQ/app/msg/rpc/pb"
)

type ChatServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedChatServer
}

func NewChatServer(svcCtx *svc.ServiceContext) *ChatServer {
	return &ChatServer{
		svcCtx: svcCtx,
	}
}

func (s *ChatServer) GetMaxAndMinSeq(ctx context.Context, in *pb.GetMinAndMaxSeqReq) (*pb.GetMinAndMaxSeqResp, error) {
	l := logic.NewGetMaxAndMinSeqLogic(ctx, s.svcCtx)
	return l.GetMaxAndMinSeq(in)
}

func (s *ChatServer) GetMinAndMaxGroupSeq(ctx context.Context, in *pb.GetMinAndMaxGroupSeqReq) (*pb.GetMinAndMaxGroupSeqResp, error) {
	l := logic.NewGetMinAndMaxGroupSeqLogic(ctx, s.svcCtx)
	return l.GetMinAndMaxGroupSeq(in)
}

func (s *ChatServer) PullMessageBySeqList(ctx context.Context, in *pb.PullMsgBySeqListReq) (*pb.PullMsgListResp, error) {
	l := logic.NewPullMessageBySeqListLogic(ctx, s.svcCtx)
	return l.PullMessageBySeqList(in)
}

func (s *ChatServer) PullMessageByGroupSeqList(ctx context.Context, in *pb.PullMsgByGroupSeqListReq) (*pb.PullMsgListResp, error) {
	l := logic.NewPullMessageByGroupSeqListLogic(ctx, s.svcCtx)
	return l.PullMessageByGroupSeqList(in)
}

func (s *ChatServer) SendMsg(ctx context.Context, in *pb.SendMsgReq) (*pb.SendMsgResp, error) {
	l := logic.NewSendMsgLogic(ctx, s.svcCtx)
	return l.SendMsg(in)
}
